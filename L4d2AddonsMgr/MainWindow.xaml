<Fluent:RibbonWindow x:Class="L4d2AddonsMgr.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Fluent="urn:fluent-ribbon"
        xmlns:local="clr-namespace:L4d2AddonsMgr"
        xmlns:sb="clr-namespace:ExplorerSearchBox;assembly=ExplorerSearchBox"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}"
                     mc:Ignorable="d" x:Name="PartRoot"
        Title="👈4👻2 Addons Manager" Height="450" Width="800" MinWidth="800" MinHeight="600">

    <Grid Loaded="AddonsGrid_Loaded" Name="MainView">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Fluent:Ribbon Grid.Row="0">

            <!--Menu-->
            <Fluent:Ribbon.Menu>
                <Fluent:ApplicationMenu>
                    <Fluent:MenuItem Header="打开外部文件夹" Command="{x:Static local:MainWindow.OpenExternalLibraryCommand}"/>
                </Fluent:ApplicationMenu>
            </Fluent:Ribbon.Menu>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="筛选">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="刷新列表"
                                   Command="{x:Static local:MainWindow.RefreshListCommand}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/refresh-icon-black.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="按来源">
                    <!--
                    Icon path can be just "Images/xxx.png"
                    but generates vs design-time errors (does not influence runtime).
                    Full path (pack...) is better then.
                    
                    "+" for inner static class, how would one know this.
                    https://stackoverflow.com/questions/6782160/how-do-you-assign-an-enum-nested-in-a-class-to-a-xaml-attribute
                    -->
                    <Fluent:ToggleButton Size="Middle" Header="创意工坊"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.SourceSbeamFilter}"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/sbeam-logo-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.SourceSbeamFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Size="Middle" Header="其他"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.SourceNonSbeamFilter}"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/nonesbeam-logo-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.SourceNonSbeamFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Size="Middle" Header="中文网" 
                                   Command="{x:Static local:MainWindow.ToggleFilterDownloadSourceCommand}"
                                   CommandParameter="l4d2.cc"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/l4d2cc-logo-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterUrlButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="l4d2.cc"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Size="Middle" Header="工坊提取"
                                   Command="{x:Static local:MainWindow.ToggleFilterDownloadSourceCommand}"
                                   CommandParameter="Steam Workshop"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/sbeamexp-logo-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterUrlButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="Steam Workshop"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Size="Middle" Header="GMaps"
                                   Command="{x:Static local:MainWindow.ToggleFilterDownloadSourceCommand}"
                                   CommandParameter="Game Maps"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/gmaps-logo-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterUrlButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="Game Maps"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="按类型">

                    <Fluent:ToggleButton Header="地图"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.TypeMapFilter}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/map-icon-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.TypeMapFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Size="Middle" Header="非地图"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.TypeNonMapFilter}"
                                   Icon="pack://application:,,,/L4d2AddonsMgr;component/Images/nonmap-icon-small-black.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.TypeNonMapFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="按状态" IsEnabled="{Binding SupportsEnabledState}">

                    <Fluent:ToggleButton Header="已启用"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.StateEnabledFilter}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/yes-icon-color.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.StateEnabledFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                    <Fluent:ToggleButton Header="未启用"
                                   Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                                   CommandParameter="{x:Static local:MainWindowViewModel+GeneralFilters.StateDisabledFilter}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/no-icon-color.png">
                        <Fluent:ToggleButton.IsChecked>
                            <Binding Converter="{StaticResource FilterButtonCheckedStateConverter}" Mode="OneWay"
                                     ConverterParameter="{x:Static local:MainWindowViewModel+GeneralFilters.StateDisabledFilter}"
                                     Path="BuiltinFilters"/>
                        </Fluent:ToggleButton.IsChecked>
                    </Fluent:ToggleButton>

                </Fluent:RibbonGroupBox>

            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem Header="操作">

                <Fluent:RibbonGroupBox>

                    <!--
                    Break line:
                    https://stackoverflow.com/questions/1449276/multiline-text-in-a-wpf-button
                    -->
                    <Fluent:Button Header="自动&#xa;重命名..."
                                   Command="{x:Static local:MainWindow.OpAutoRenameCommand}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/rename-icon-black.png"/>

                </Fluent:RibbonGroupBox>

                <Fluent:RibbonGroupBox>

                    <!--
                    Break line:
                    https://stackoverflow.com/questions/1449276/multiline-text-in-a-wpf-button
                    -->
                    <Fluent:Button Header="导出&#xa;地图表"
                                   Command="{x:Static local:MainWindow.ExportMapsListCommand}"
                                   LargeIcon="pack://application:,,,/L4d2AddonsMgr;component/Images/rename-icon-black.png"/>

                </Fluent:RibbonGroupBox>

            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>

        <DockPanel Grid.Row="1" Margin="5">
            <!--
            Format string with bindings?
            https://stackoverflow.com/questions/4206612/wpf-stringformat-on-label-content
            https://docs.microsoft.com/en-us/dotnet/framework/xaml-services/escape-sequence-markup-extension
            https://stackoverflow.com/questions/2552853/how-to-bind-multiple-values-to-a-single-wpf-textblock
            https://stackoverflow.com/questions/4399178/stringformat-and-multibinding-with-label
            -->
            <TextBlock HorizontalAlignment="Left" Foreground="DarkGray">
                <TextBlock.Text>
                    <MultiBinding StringFormat="{}共{0}个文件，{1}">
                        <Binding Path="Files.Count"/>
                        <Binding Path="ShownFilesSize" Converter="{StaticResource FormatFileSizeConverter}"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <TextBlock HorizontalAlignment="Left" Margin="15,0,0,0" Text="正在加载...">
                <TextBlock.Style>
                    <Style>
                        <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                <Setter Property="TextBlock.Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <sb:ExplorerSearchBox x:Name="SearchBox" HorizontalAlignment="Right"
                                  FocusManager.IsFocusScope="True"
                                  HintText="文件名/显示名/拼音/缩写"
                                  DefaultFocusedElement="{Binding ElementName=AddonsListBox}"
                                  SearchRequested="ExplorerSearchBox_SearchRequested"/>
        </DockPanel>

        <!--Didn't know it's a default behavior.
        https://stackoverflow.com/questions/36108/how-to-get-controls-in-wpf-to-fill-available-space -->

        <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0"
                 Name="AddonsListBox" ItemsSource="{Binding Files}" Grid.Row="2"
                 PreviewMouseLeftButtonDown="AddonsListBox_PreviewMouseLeftButtonDown"
                 PreviewMouseLeftButtonUp="AddonsListBox_PreviewMouseLeftButtonUp"
                 PreviewMouseMove="AddonsListBox_PreviewMouseMove"
                 AllowDrop="False" DragOver="AddonsListBox_DragValidate"
                 DragEnter="AddonsListBox_DragValidate"
                 Drop="AddonsListBox_Drop"
                            SelectionMode="Extended">

            <!--Templating? More like html than Android's adapter view.
            https://stackoverflow.com/questions/4722114/wpf-listbox-layout-multiple-columns/4722242
            
            ListBox is more like a logical container and the WrapPanel
            or whatever panel can be its view implementation right?
            https://www.c-sharpcorner.com/uploadfile/mahesh/listbox-in-wpf/
            https://stackoverflow.com/questions/227231/listbox-vs-listview-how-to-choose-for-data-binding/227355
            
            Wee a property can be extracted as a child tag...-->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <!-- Strech children to avoid one-side whitespaces. 
                    
                    How to use it?
                    https://stackoverflow.com/questions/3767873/how-to-use-custom-controls-in-wpf-->
                    <local:MeowWrapPanel IsItemsHost="True" ItemHeight="120"
                                                 ItemMinWidth="240"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <!--
            To solve the screen-blasting binding errors introduced by custom items panel.
            https://stackoverflow.com/questions/160391/listbox-with-grid-as-itemspaneltemplate-produces-weird-binding-errors
            -->
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <StackPanel Orientation="Horizontal" Height="120" Name="VpkPanel" Background="Transparent">
                        <!--
                        ContextMenu, right?
                        https://stackoverflow.com/questions/43547647/how-to-make-right-click-button-context-menu-in-wpf-->
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="ApplicationCommands.Open" CommandParameter="{Binding FileInf}"/>
                                <MenuItem Header="在文件管理器中显示"
                                          Command="{x:Static local:MainWindow.ShowItemInExplorerCommand}"
                                          CommandParameter="{Binding FileInf}"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>

                        <!--
                        Double click binding.
                        https://stackoverflow.com/questions/2547442/wpf-listboxitem-double-click
                        -->
                        <StackPanel.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick"
                                          Command="ApplicationCommands.Open" CommandParameter="{Binding FileInf}"/>
                        </StackPanel.InputBindings>

                        <Image Width="32" Height="32" Margin="12,0,15,0">
                            <!-- Need icons.
                            https://stackoverflow.com/questions/25714085/wpf-import-image-as-resource
                            No, svg is preferred.
                            Convert to xaml?
                            https://stackoverflow.com/questions/3526366/wpf-what-is-the-correct-way-of-using-svg-files-as-icons-in-wpf
                            https://liftcodeplay.com/2015/09/14/converting-vectorsvg-images-into-xaml/
                            https://msadowski.github.io/WPF-vector-graphics-tutorial/
                            
                            Okey than get icons for map and addon.
                            https://www.flaticon.com/free-icon/map_149223#term=map&page=1&position=44
                            
                            The addon one is too...
                            Well reducing its thickness would be good.
                            https://stackoverflow.com/questions/52442977/decrease-thickness-of-svg-path
                            
                            Having to edit the path.
                            https://css-tricks.com/tools-visualize-edit-svg-paths-kinda/
                            
                            Use this it has path editor. Fee? Use dev console pick the path and copy.
                            https://www.janvas.com/XOS_6.2/janvas_website_6.2/index.php?language=en&idPage=182
                            It's cheap for EU residents and Americans but convert to CN￥ that's a lot!
                            
                            Not properly formed? Find & Replace in npp.
                            https://stackoverflow.com/questions/17392392/replace-regexp-capture-group-in-notepad/17392520
                            
                            Use this as a live verify.
                            https://mavo.io/demos/svgpath/
                            -->
                            <Image.Style>
                                <Style>
                                    <Setter Property="Image.Source" Value="{StaticResource addonIcon}"/>
                                    <!--
                                    Triggers?
                                    https://www.wpf-tutorial.com/styles/trigger-datatrigger-event-trigger/
                                    -->
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasMission}" Value="true">
                                            <Setter Property="Image.Source" Value="{StaticResource mapIcon}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <StackPanel Orientation="Vertical" Margin="4" VerticalAlignment="Center">

                            <!--
                                Ok switch to text block.
                                https://stackoverflow.com/questions/9684619/label-doesnt-display-character
                            -->
                            <TextBlock Text="{Binding Name}" FontSize="14" Margin="4"/>
                            <TextBlock Text="{Binding FileDispName}" FontSize="10" Foreground="DarkGray"/>

                            <StackPanel Orientation="Horizontal" IsEnabled="{Binding ElementName=PartRoot, Path=DataContext.SupportsEnabledState }">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <Label Foreground="DarkGray">
                                    <Label.Style>
                                        <Style>
                                            <Setter Property="Label.Content" Value="已启用"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                                    <Setter Property="Label.Content" Value="未启用"/>
                                                    <Setter Property="Label.FontWeight" Value="Bold"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>

                                <Button Margin="5" CommandParameter="{Binding}"
                                    Command="{x:Static local:MainWindow.ToggleAddonEnabledCommand}">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource LinkButton}">
                                            <Setter Property="Content" Value="禁用"/>
                                            <Setter Property="Visibility" Value="Hidden" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMouseOver, ElementName=VpkPanel}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsEnabled}" Value="false">
                                                    <Setter Property="Content" Value="启用"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindow.OpenExternalLibraryCommand}"
                    Executed="OpenExternalLibraryCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.ToggleAddonEnabledCommand}"
                    Executed="ToggleAddonEnabledCommand_Invoke"
                    CanExecute="CanToggleAddonEnabled"/>

        <CommandBinding Command="{x:Static local:MainWindow.TriggerSearchCommand}"
                    Executed="TriggerSearchCommand_Invoke"
                    CanExecute="CanTriggerSearchCommand"/>

        <CommandBinding Command="ApplicationCommands.Open"
                    Executed="OpenItemCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.ShowItemInExplorerCommand}"
                    Executed="ShowItemInExplorerCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.RefreshListCommand}"
                        CanExecute="ToggleFilterCommand_CanInvoke"
                    Executed="RefreshListCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.ToggleFilterCommand}"
                        CanExecute="ToggleFilterCommand_CanInvoke"
                    Executed="ToggleFilterCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.ToggleFilterDownloadSourceCommand}"
                        CanExecute="ToggleFilterCommand_CanInvoke"
                    Executed="ToggleFilterDownloadSourceCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.OpAutoRenameCommand}"
                        CanExecute="OpSelOrAll_CanInvoke"
                    Executed="OpAutoRenameCommand_Invoke"/>

        <CommandBinding Command="{x:Static local:MainWindow.ExportMapsListCommand}"
                        CanExecute="ExportMapsListCommand_CanInvoke"
                        Executed="ExportMapsListCommand_Invoke"/>

    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static local:MainWindow.TriggerSearchCommand}"  Gesture="CTRL+F" />
    </Window.InputBindings>

</Fluent:RibbonWindow>
